#!/bin/bash
###############################################################################
# Author: Travis Goldie
# Date: January 2012
# Description: Basic configurations for the terminal
#				see /usr/share/doc/bash/examples/startup-files
#				(in the package bash-doc) for examples
###############################################################################
#-------------------------------------------------------------
# Source global definitions (if any)
#-------------------------------------------------------------
# If not running interactively, don't do anything
[ -z "$PS1" ] && return

#-------------------------------------------------------------
# File Includes
#-------------------------------------------------------------
# If /etc/bashrc is present, then run.
if [ -f /etc/bashrc ]; then
    . /etc/bashrc
fi

# Enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
fi

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.
# ***Note: in bash_aliases are the SIOS specific stuff***
if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# Function definitions
if [ -f ~/.bash_funcs ]; then
    . ~/.bash_funcs
fi

# PS1 Config
# Configures the PS1 prompt
if [ -f ~/.bash_ps1 ]; then
    . ~/.bash_ps1
fi

# Tmux Tab Completion
if [ -f ~/bin/tmux_completion ]; then
    . ~/bin/tmux_completion
fi

#-------------------------------------------------------------
# Bash history options
#-------------------------------------------------------------
# do not add commands with leading spaces. useful to hide commands
#export HISTCONTROL=ignorespace
# don't put duplicate lines in the history. See bash(1) for more options
export HISTCONTROL=ignoredups
# ... and ignore same sucessive entries. Does both of the above options.
#export HISTCONTROL=ignoreboth

# add time stamp to history entries.
export HISTTIMEFORMAT='%Y-%m-%d %H:%M:%S '

# each time a prompt is shown update the history file
#export PROMPT_COMMAND="history -a;history -n;$PROMPT_COMMAND"
export PROMPT_COMMAND="history -a;$PROMPT_COMMAND"

#Ignore these in history
export HISTIGNORE="exit"

# appends to history rather than overright sessions
shopt -s histappend

# multiline cmds are stored as one line in history
shopt -s cmdhist

#-------------------------------------------------------------
# Cmd Line Editing  Options and Key bindings
#-------------------------------------------------------------
# If a command is a dir, use go to that dir
shopt -s autocd

# Follow symlinks like they are physical links. Default is to treat
# symlinks like physical locations.
# Ex: Given ~/sym --> ~/x/y/z. Cd into ~/sym.
# Default: 'cd ..' will got to ~
# With option: 'cd ..' will go to ~/x/y
#set -o physical

# Includes files and dirs that start with '.' in glob expansions
shopt -s dotglob

# Extended glob functionality
shopt -s extglob

# Used for debugging
shopt -s extdebug

# Error message when shift'ing args too many times
shopt -s shift_verbose

# If set, and Readline is being used, Bash will not attempt to search the
# PATH for possible completions when completion is attempted on an empty line.
shopt -s no_empty_cmd_completion

# Allows the use of vi-like commands in command line
# To update changes need to open a new shell
set -o vi

# If not using VI mode remember to set it to emacs mode
#set -o emacs

#Creates an indicator of which mode (cmd or ins) currently in
#TODO

##---- VI Command Mode -----
# v: keeps from jumping into editing mode
#bind -m vi-command "v":

# ^v and V: use $EDITOR to edit current line
#bind -m vi-command "\A-v":edit-command-line
#bind -m vi-command "V":edit-command-line

# ^e: expand an alias command
bind -m vi-command "\C-e":alias-expand-line

# ZZ: to switch to emacs editing mode
bind -m vi-command "ZZ":emacs-editing-mode

# jj: to switch to insert mode
#bind -m vi-command "jj":emacs-editing-mode

#---- VI Insert Mode -----
# esc: enters command mode and changes prompt
#bind -m vi-insert "\C-[":vi_prompt

# ^a: append to the end of the line
bind -m vi-insert "\C-a":end-of-line

# ^e: expand an alias command
bind -m vi-insert "\C-e":alias-expand-line

# ^l: clear the screen
bind -m vi-insert "\C-l":clear-screen

# ^p: check for partial match in history
bind -m vi-insert "\C-p":dynamic-complete-history

# ^n: cycle through the list of partial matches
bind -m vi-insert "\C-n":menu-complete

# ^t: insert at line start like in emacs mode
bind -m vi-insert "\C-t":beginning-of-line

# ^left: previous word
#bind -m vi-insert "\C-left":vi-prev-word

# ^right: next word
#bind -m vi-insert "\C-right":vi-next-word

#-------------------------------------------------------------
# Bash Window Options
#-------------------------------------------------------------
# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"


# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

#-------------------------------------------------------------
# Environment Variables
#-------------------------------------------------------------
# User specific environment and startup programs
PATH=$PATH:/opt/ruby/bin
PATH=$PATH:/var/lib/gems/1.9.1/bin
PATH=$PATH:~/Dropbox/repos/nextgen/ui/node_modules/.bin
export PATH=$PATH:$HOME/bin/:/usr/public/bin:/usr/local/etc:.

# Update paths for nodejs
export NODE_PATH="/usr/local/lib/jsctags:${NODE_PATH}"

# Change editor so that will use vim rather than nano
export EDITOR=vim

# Local Paths
export DROPBOX="${HOME}/Dropbox"
export VIMBACKUP="${DROPBOX}/shared/backup/vimbackup"

#For GPG
export GPG_TTY=$( tty )
#export GNUPGHOME=~/.gnupg

# cd command will search these extra paths.
export CDPATH="."

# Defaults permissions when a file is created
#077 - read/write/exucute to user, nothing for everyone else
#033 - every one else can only read, owner can read/write
#umask 077
umask 033

#-------------------------------------------------------------
# Execute on Shell Start
#-------------------------------------------------------------
# Map capslock to ctrl key. Disable capslock first.
# Disabling capslock only works on virt terminals.
setleds -v -caps 2> /dev/null || :
setxkbmap -layout us -option ctrl:nocaps

# Tab completion for grunt task runner
eval "$(grunt --completion=bash)"

# Set git aliases
# git config --global --add alias.perm-reset '!git diff -p -R | grep -E "^(diff|(old|new) mode)" | git apply'
